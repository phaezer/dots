(include "lib/symbols.kbd")
(include "lib/words.kbd")
(include "secrets.kbd")

(defcfg
  ;; required for chordsv2
  concurrent-tap-hold yes
  sequence-timeout 1000
)


(defsrc
  esc  üîÖ   üîÜ   nop0 nop1 nop2 nop3 ‚óÄ‚óÄ   ‚ñ∂‚è∏   ‚ñ∂‚ñ∂   üîá   üîâ   üîä
  `    1    2    3    4    5    6    7    8    9    0    -    =   bks
  tab  q    w    e    r    t    y    u    i    o    p    [    ]     \
  caps a    s    d    f    g    h    j    k    l    ;    '        ret
  lsft z    x    c    v    b    n    m    ,    .    /            rsft
      lctl lalt lmet            spc           rmet ralt rctl
)

(defvar
  ;; --- timings ---
  ;; taps
  to-tap-s 40
  to-tap-m 75
  to-tap-l 200

  ;; holds
  to-hld-s 200
  to-hld-m 300
  to-hld-l 500

  ;; chords
  to-crd-s 30
  to-crd-m 50
  to-crd-l 150

  ;; autoshift
  to-as 200

  ;; l/r hand keys
  right-hand-except (
    q w e r
    ;; a s d f
    z x c v
    spc
  )
  left-hand-except (
    u i o p
    ;; j k l ;
    m , . /
    spc
  )
)

(deftemplate auto-shift (key)
  (tap-hold-press-timeout 100 100 $key $key (concat "S-" $key))
)

(deftemplate mod-tap (char mod)
  (switch
    ((key-timing 3 less-than 250)) $char break
    () (tap-hold-release-timeout 200 400 $char $mod $char) break
  )
)

;; common aliases
(defalias
  ;; --- multi ---
  meh (multi lctl lalt lsft)
  hyp (multi lctl lalt lsft lmet)

  ;; layers
  SYM (layer-toggle sym)
  SYM2 (layer-toggle sym2)
  ;; TYP (layer-toggle typ)
  NUM (layer-toggle num)
  MAC (layer-toggle macros)
  FN (layer-toggle fn)

  cpw (caps-word-toggle 1000)

  ;; layer tap holds
  spc (tap-hold $to-tap-l $to-hld-s spc @SYM)
  ;; \ (tap-hold 0 $to-hld-m \ @hyp)
  ;; z (tap-hold 0 $to-hld-s z @FN)
  ;; / (tap-hold 0 $to-hld-m / @FN)

  ;; dynamic macros
  rdm1 (dynamic-macro-record 1)
  pdm1 (dynamic-macro-play 1)
  rdm2 (dynamic-macro-record 2)
  pdm2 (dynamic-macro-play 2)
  rdm3 (dynamic-macro-record 3)
  pdm3 (dynamic-macro-play 3)
  rdm4 (dynamic-macro-record 4)
  pdm4 (dynamic-macro-play 4)
  rdm5 (dynamic-macro-record 5)
  pdm5 (dynamic-macro-play 5)

  ;; mod-tap keys

  ;; hrm
  a (t! mod-tap a lctl)
  s (t! mod-tap s lalt)
  d (t! mod-tap d lmet)
  f (t! mod-tap f lsft)
  j (t! mod-tap j rsft)
  k (t! mod-tap k rmet)
  l (t! mod-tap l ralt)
  ; (t! mod-tap ; rctl)
  ;; hyp / meh
  z (t! mod-tap z @meh)
  x (t! mod-tap x @hyp)
  . (t! mod-tap . @hyp)
  / (t! mod-tap / @meh)
)

(defchordsv2
  ;; LEFT HAND
  (s d) bks $to-crd-s all-released ()
  (d f) del $to-crd-s all-released ()
  (a f) @~  $to-crd-s all-released ()

  (f e) @$ $to-crd-s all-released ()
  (f w) @^ $to-crd-s all-released ()
  (f q) ` $to-crd-s all-released ()
  (d w) @@ $to-crd-m all-released ()
  (q w) @! $to-crd-s all-released ()
  (d q) @# $to-crd-m all-released ()

  ;; RIGHT HAND
  (j k) esc  $to-crd-s all-released ()
  (k l) ret $to-crd-s all-released ()
  (j ;) S-' $to-crd-s all-released ()

  (j i) S-9 $to-crd-m all-released ()
  (j o) S-0 $to-crd-m all-released ()
  (k o) [ $to-crd-m all-released ()
  (k p) ] $to-crd-m all-released ()
  (l p) S-[ $to-crd-m all-released ()
  (l [) S-] $to-crd-m all-released ()
  (l ;) @: $to-crd-s all-released ()

  (. /) = $to-crd-m all-released ()
  (, .) @+ $to-crd-s all-released ()
  (m ,) - $to-crd-s all-released ()
  (m n) S-- $to-crd-s all-released ()
)

(deflayer (base)
  _     _     _     _     _     _           _     _     _     _     _     _     _
  _     _     _     _     _     _           _     _     _     _     _     _     _    del
  _     _     _     _     _     _           _     _     _     _     _     _     _    _
  bks   @a    @s    @d    @f    _           _     @j    @k    @l    @;    _          _
  _     @z    @x    _     _     _           _     _     _     @.    @/               _
        _     _     _                @spc                     _     _     _
)


;; (deflayer (sym)
;;   _     _     _     _     _     _           _     _     _     _     _     _     _
;;   XX    f1    f2    f3    f4    f5          f6    f7    f8    f9    f10   f11   f12    XX
;;   XX    XX    XX    @!    XX    XX          XX    @{    @}    XX    XX    pgup  pgdn   XX
;;   @cpw  @@    -     @+    =     @%          @^    S-9   S-0   @$    S-'    `           XX
;;   @NUM  XX    XX    XX    @~    \           @&    [     ]     XX    @MAC               @TYP
;;         @TYP  @FN   @SYM2             _                       @SYM2 @FN   _
;; )

(deflayer (sym)
  _     _     _     _     _     _           _     _     _     _     _     _     _
  XX    f1    f2    f3    f4    f5          f6    f7    f8    f9    f10   f11   f12    XX
  XX    XX    @#    @$    @%    @{          @}    @*    @&    @|    @->   pgup  pgdn   XX
  @cpw  @@    @~    @&    @|    S-9         S-0   -     @+    =     @::   `            XX
  lsft  M-z   M-x   M-c   M-v   [           ]     @_    @^    @$    \                  @MAC
        @NUM  @FN   @SYM2             _                       @SYM2 @FN   _
)

(deflayer (sym2)
  _     _     _     _     _     _           _     _     _     _     _     _     _
  XX    @√Ü    @¬ß    @¬∞    @ùëì    XX          XX    @„Äà   @„Äâ   @„Ää   @„Äã   XX     XX    XX
  XX    XX    @==   @¬Æ    @‚Ñ¢    @{{         @}}   @¬´    @¬ª    @‚Äπ    @‚Ä∫   @„Äå    @„Äç    XX
  caps  @√Ü    @¬ß    @&&   @||   @drp        @dlp  @‚Äú    @‚Äù    @‚Äò    @‚Äô   @```         XX
  XX    XX    XX    @¬©    @!=   @[[         @]]   @¬µ    @<=   @>=   XX                XX
        _     _     _                  _                   _     _     _
)



;; (deflayer (typ)
;;   _     _     _     _     _     _     _     _     _     _     _     _     _
;;   XX    XX    XX    XX    XX    XX    XX    XX    XX    XX    XX    XX    XX    XX
;;   XX    XX    XX    XX    @¬Æ   @‚Ñ¢    XX    @¬´    @¬ª    @‚Äπ    @‚Ä∫     XX    XX    XX
;;   XX    @√Ü    @¬ß    @¬∞    @ùëì   XX    XX    @‚Äú    @‚Äù    @‚Äò    @‚Äô     XX          XX
;;   XX    XX    XX    @¬©    XX   XX    XX    @¬µ    XX    @...  XX                 XX
;;         _     _     _                _                  _     XX    XX
;; )

(deflayer (num)
  _     _     _     _     _     _          _     _     _     _     _     _     _
  XX    S-1   S-2   S-3   S-4   S-5        S-6   S-7   S-8   S-9   S-0    S--   =     bks
  XX    XX    XX    XX    XX    S-9        S-3   7     8     9     -      S-=   /     \
  XX    XX    XX    XX    XX    S-0        tab   4     5     6     0      =           ret
  _     XX    XX    XX    XX    S-=        S-4   1     2     3     .                  rsft
        _     _     bks              spc                     ent   esc   _
)

(deflayer (macros)
  _     _     _     _     _     _          _     _     _     _     _     _     _
  XX    @sec1 @sec2 @sec3 @sec4 @sec5      XX    XX    XX    XX    XX    XX    XX    XX
  `     @rdm1 @rdm2 @rdm3 @rdm4 @rdm5      XX    XX    XX    XX    XX    XX    XX    XX
  XX    @pdm1 @pdm2 @pdm3 @pdm4 @pdm5      XX    XX    XX    XX    XX    XX    XX
  _     XX    XX    XX    XX    XX         XX    XX    XX    XX    XX                XX
        _     _     XX                 XX                    XX    XX    XX
)

(deflayer (fn)
  _     _     _     _     _     _          _     _     _     _     _     _     _
  XX    XX    XX    XX    XX    XX         XX    XX   XX    XX    XX    XX    XX    XX
  XX    üîá    üîâ    üîä    XX    XX         XX    üîÖ   üîÜ    XX    XX    XX    XX    XX
  XX    ‚óÄ‚óÄ    ‚ñ∂‚è∏    ‚ñ∂‚ñ∂    XX    XX         ‚óÄ     ‚ñº    ‚ñ≤     ‚ñ∂     esc   XX          XX
  _     XX    lsft  lctl  XX    XX         XX    home  pgdn pgup  end                _
        _     _     _                  _                          _     _      _
)