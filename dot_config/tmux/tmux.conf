#=== vars ===
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

# === general ===
set-option -g allow-passthrough on
# start at 1 not 0
set -g base-index 1
# don't destroy the session when last window is killed
set -g detach-on-destroy off
set -g renumber-windows on
setw -g mode-keys vi

#=== Mouse ===
set -g mouse on

#=== Status bar ===
set-option -g status-position top
# ... see other options set in theme section below

#=== Shell management ===
set -g default-shell ${SHELL}
set -g default-command ${SHELL}

# === bells ===
# don't do anything when a 'bell' rings
set -g visual-activity off
set -g visual-bell off
set -g visual-silence off
setw -g monitor-activity off
set -g bell-action none

#=== nested ===
# Use ^b b to send the leader to a nested session.
bind-key b send-prefix

#=== keyboard ===
# Don't wait for an escape sequence after hitting Esc.
# fixes insert mode exit lag in vim.
set -sg escape-time 0

# === Windows ===
# Allow window renaming so we get nicer icons
set -g allow-rename on
# move windows
bind-key left run 'tmux swap-window -d -t #{e|-|:#I,1}'
bind-key right run 'tmux swap-window -d -t #{e|+|:#I,1}'

# === nvim integration ===
set -g @tmux-nvim-condition "(ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iE '^[^TXZ ]+ +(\\S+\\/)?g?\.?(view|n?vim?x?)(-wrapped)?(diff)?$'; tmux display-message -p '#{pane_title}' \
    | grep -iE '[: ]n?vim?$') | grep -qE ."

# SRC: https://github.com/alexghergh/nvim-tmux-navigation
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' 'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' 'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' 'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' 'select-pane -R'

# choose-tree binding 
bind j run 'tmux choose-tree -swZ'

#=== sessionizer ===
bind M-n run-shell "tmux neww tmux_sessionizer"
# home
bind M-0 run-shell "tmux-sessionizer ~"
# nvim
bind M-1 run-shell "tmux-sessionizer ~/.config/nvim"
# tmux 
bind M-2 run-shell "tmux-sessionizer ~/.config/tmux"
# obsidian notebooks
bind M-j run-shell "tmux-sessionizer ~/obsidian/journal"
bind M-k run-shell "tmux-sessionizer ~/obsidian/notes"
bind M-l run-shell "tmux-sessionizer ~/obsidian/writing"

#=== clipboard ===
setw -g mode-keys vi
# Setup 'v' begin/end selection as in Vim.
bind-key -T copy-mode-vi v send-keys -X begin-selection

#=== plugins ===
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'     # A set of tmux options that should be acceptable to everyone.
set -g @plugin 'tmux-plugins/tmux-yank'         # Cross-platform support for clipboard.
set -g @plugin 'tmux-plugins/tmux-resurrect'    # Save/Restore sessions
set -g @plugin 'tmux-plugins/tmux-continuum'    # continuos saving of tmux session in the bg
set -g @plugin 'tmux-plugins/tmux-logging'      # Logging for tmux.
set -g @plugin 'tmux-plugins/tmux-pain-control' # better pane control
set -g @plugin 'tmux-plugins/tmux-cpu'          # show cpu in statusline
set -g @plugin 'tmux-plugins/tmux-battery'      # show battery in statusline
set -g @plugin 'b0o/tmux-autoreload'            # watches your tmux configuration file and automatically reloads it on change.
set -g @plugin 'Morantron/tmux-fingers'         # Easy copy mode with mouse-free selection.
set -g @plugin 'sainnhe/tmux-fzf'               # Fuzzy finder for tmux.
set -g @plugin 'omerxx/tmux-floax'              # floating pane support for tmux
set -g @plugin 'noscript/tmux-mighty-scroll'    # seamless scrolling
set -g @plugin 'jaclu/tmux-menus'               # Cuz i'm a noob, open with prefix + space
set -g @plugin 'tmux-plugins/tmux-continuum'    # Auto Save/Restore

set -g @menus_config_file "$HOME/.config/tmux/tmux.conf"
set -g @menus_trigger 'Space'

set -g @continuum-restore 'on' # Restore using continuum.

# === THEME ===
set -g @plugin 'catppuccin/tmux'

set -g @catppuccin_flavor 'mocha'
set -g @catppuccin_window_text ' #W'
set -g @catppuccin_window_default_text ' #W'
set -g @catppuccin_window_current_fill 'number'
set -g @catppuccin_window_current_text ' #W'
set -g @catppuccin_window_status_style "rounded"
set -g @catppuccin_window_status "icon"
set -g @catppuccin_window_default_fill "number"
set -g @catppuccin_window_number_position "left"

set -g status-right-length 100
set -g status-left-length 100
set -g status-left ""
set -g status-right "#{E:@catppuccin_status_session}"
set -ag status-right "#{E:@catppuccin_status_application}"
set -agF status-right "#{E:@catppuccin_status_cpu}"
set -ag status-right "#{E:@catppuccin_status_uptime}"
set -agF status-right "#{E:@catppuccin_status_battery}"

# souce the theme with color overrides 
source-file ~/.config/tmux/themes/tokyonight-storm.conf

# === sesh ===
bind-key "T" run-shell "sesh connect \"$(
  sesh list --icons | fzf-tmux -p 80%,70% \
    --no-sort --ansi --border-label ' sesh ' --prompt '⚡  ' \
    --header '  ^a all ^t tmux ^g configs ^x zoxide ^d tmux kill ^f find' \
    --bind 'tab:down,btab:up' \
    --bind 'ctrl-a:change-prompt(⚡ )+reload(sesh list --icons)' \
    --bind 'ctrl-t:change-prompt(  )+reload(sesh list -t --icons)' \
    --bind 'ctrl-g:change-prompt(  )+reload(sesh list -c --icons)' \
    --bind 'ctrl-x:change-prompt(  )+reload(sesh list -z --icons)' \
    --bind 'ctrl-f:change-prompt(  )+reload(fd -H -d 2 -t d -E .Trash . ~)' \
    --bind 'ctrl-d:execute(tmux kill-session -t {2..})+change-prompt(⚡  )+reload(sesh list --icons)' \
    --preview-window 'right:55%' \
    --preview 'sesh preview {}'
)\""

# settings recommend by sesh
bind-key x kill-pane # skip "kill-pane 1? (y/n)" prompt

run '~/.tmux/plugins/tpm/tpm'
